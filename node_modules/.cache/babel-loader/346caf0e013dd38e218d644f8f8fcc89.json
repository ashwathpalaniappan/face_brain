{"ast":null,"code":"var _jsxFileName = \"E:\\\\STR\\\\Web development\\\\Udemy\\\\facedetect\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '2ecce0c053ef463f8f6c8e53549b9059'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 900\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onButtonSubmit: this.onButtonSubmit,\n      onInputChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/STR/Web development/Udemy/facedetect/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","box","render"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation'; \nimport Logo from './components/Logo/Logo'; \nimport Rank from './components/Rank/Rank'; \nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\n\n\nconst app = new Clarifai.App({\n apiKey: '2ecce0c053ef463f8f6c8e53549b9059'\n});\nconst particleOptions={\n                        particles: {\n                          number: {\n                            value: 100,\n                            density: {\n                              enable:true,\n                              value_area:900\n                            }\n                          }\n                        }\n                      }\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      input: '',\n      imageUrl: '',\n      box: '',\n    }\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response =>this.calculateFaceLocation(response))\n    .catch(err => console.log(err));\n  }\n  render(){\n      return (\n          <div className=\"App\">\n          <Particles className='particles' \n                  params={particleOptions}\n                  />\n          <Navigation />\n          <Logo />\n          <Rank />\n          <ImageLinkForm \n          onButtonSubmit={this.onButtonSubmit}\n          onInputChange={this.onInputChange}/>\n          <FaceRecognition imageUrl={this.state.imageUrl}/>\n        </div>\n      );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}