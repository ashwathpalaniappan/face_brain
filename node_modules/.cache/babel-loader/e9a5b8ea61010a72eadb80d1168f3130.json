{"ast":null,"code":"var _jsxFileName = \"I:\\\\Project\\\\face_brain\\\\facedetect\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'SignIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nconst app = new Clarifai.App({\n  apiKey: '2ecce0c053ef463f8f6c8e53549b9059'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 900\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.LoadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height); // console.log(width, height);\n\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      // console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('https://vast-forest-77348.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onButtonSubmit: this.onButtonSubmit,\n      onInputChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    })) : route === 'SignIn' ? /*#__PURE__*/React.createElement(SignIn, {\n      LoadUser: this.LoadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      LoadUser: this.LoadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["I:/Project/face_brain/facedetect/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","SignIn","Register","Logo","Rank","ImageLinkForm","FaceRecognition","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","LoadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAO,WAAP;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,GAAG,EAAE,EAHc;AAInBC,EAAAA,KAAK,EAAE,QAJY;AAKnBC,EAAAA,UAAU,EAAC,KALQ;AAMnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,OAAO,EAAE,CAJL;AAKJC,IAAAA,MAAM,EAAE;AALJ;AANa,CAArB;AAeA,MAAMC,GAAG,GAAG,IAAIpB,QAAQ,CAACqB,GAAb,CAAiB;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAAjB,CAAZ;AAGA,MAAMC,eAAe,GAAC;AACEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAC,IADA;AAEPC,QAAAA,UAAU,EAAC;AAFJ;AAFH;AADC;AADb,CAAtB;;AAWA,MAAMR,GAAN,SAAkBvB,SAAlB,CAA4B;AACpBgC,EAAAA,WAAW,GAAE;AACX;;AADW,SAKbC,QALa,GAKDC,IAAD,IAAU;AACnB,WAAKC,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAE;AACnBC,UAAAA,EAAE,EAAEiB,IAAI,CAACjB,EADU;AAEnBC,UAAAA,IAAI,EAAEgB,IAAI,CAAChB,IAFQ;AAGnBC,UAAAA,KAAK,EAAEe,IAAI,CAACf,KAHO;AAInBC,UAAAA,OAAO,EAAEc,IAAI,CAACd,OAJK;AAKnBC,UAAAA,MAAM,EAAEa,IAAI,CAACb;AALM;AAAP,OAAd;AAOD,KAbY;;AAAA,SAebe,qBAfa,GAeYF,IAAD,IAAU;AAChC,YAAMG,YAAY,GAAIH,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBJ,IAAhB,CAAqBK,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAlE;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB,CAJgC,CAKhC;;AACA,aAAO;AACLC,QAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD5B;AAELK,QAAAA,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAF1B;AAGLK,QAAAA,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHvC;AAILS,QAAAA,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR;AAJ1C,OAAP;AAMD,KA3BY;;AAAA,SA6BfS,cA7Be,GA6BG3C,GAAD,IAAS;AACxB;AACA,WAAKsB,QAAL,CAAc;AAACtB,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACD,KAhCc;;AAAA,SAiCb4C,aAjCa,GAiCIC,KAAD,IAAW;AACzB,WAAKvB,QAAL,CAAc;AAACxB,QAAAA,KAAK,EAAE+C,KAAK,CAACC,MAAN,CAAa/B;AAArB,OAAd;AACD,KAnCY;;AAAA,SAoCbgC,cApCa,GAoCI,MAAM;AACrB,WAAKzB,QAAL,CAAc;AAACvB,QAAAA,QAAQ,EAAE,KAAKiD,KAAL,CAAWlD;AAAtB,OAAd;AACAW,MAAAA,GAAG,CAACwC,MAAJ,CAAWC,OAAX,CACE7D,QAAQ,CAAC8D,iBADX,EAEE,KAAKH,KAAL,CAAWlD,KAFb,EAGCsD,IAHD,CAGMC,QAAQ,IAAI;AAChB,YAAGA,QAAH,EAAY;AACVC,UAAAA,KAAK,CAAC,+CAAD,EAAiD;AAChDC,YAAAA,MAAM,EAAE,KADwC;AAEhDC,YAAAA,OAAO,EAAE;AAAC,8BAAe;AAAhB,aAFuC;AAGhDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBvD,cAAAA,EAAE,EAAC,KAAK4C,KAAL,CAAW7C,IAAX,CAAgBC;AADE,aAAf;AAH0C,WAAjD,CAAL,CAOCgD,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAPlB,EAQCR,IARD,CAQMS,KAAK,IAAI;AACb,iBAAKvC,QAAL,CAAcwC,MAAM,CAACC,MAAP,CAAc,KAAKf,KAAL,CAAW7C,IAAzB,EAA+B;AAACI,cAAAA,OAAO,EAAEsD;AAAV,aAA/B,CAAd;AAED,WAXD,EAYCG,KAZD,CAYOC,OAAO,CAACC,GAZf;AAaD;;AACD,aAAKvB,cAAL,CAAoB,KAAKpB,qBAAL,CAA2B8B,QAA3B,CAApB;AACC,OApBH,EAqBCW,KArBD,CAqBOG,GAAG,IAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CArBd;AAsBD,KA5DY;;AAAA,SA8DbC,aA9Da,GA8DInE,KAAD,IAAW;AACzB,UAAGA,KAAK,KAAK,SAAb,EAAuB;AACrB,aAAKqB,QAAL,CAAczB,YAAd;AACD,OAFD,MAEO,IAAGI,KAAK,KAAK,MAAb,EAAoB;AACzB,aAAKqB,QAAL,CAAc;AAACpB,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD;;AACD,WAAKoB,QAAL,CAAc;AAACrB,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KArEY;;AAEX,SAAK+C,KAAL,GAAanD,YAAb;AACD;;AAmEDwE,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEnE,MAAAA,UAAF;AAAcH,MAAAA,QAAd;AAAwBE,MAAAA,KAAxB;AAA+BD,MAAAA;AAA/B,QAAuC,KAAKgD,KAAlD;AACE,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AACQ,MAAA,MAAM,EAAEpC,eADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAIA,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEV,UAAxB;AAAoC,MAAA,aAAa,EAAE,KAAKkE,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKCnE,KAAK,KAAK,MAAV,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAK+C,KAAL,CAAW7C,IAAX,CAAgBE,IAA5B;AAAkC,MAAA,OAAO,EAAE,KAAK2C,KAAL,CAAW7C,IAAX,CAAgBI,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,aAAD;AACA,MAAA,cAAc,EAAE,KAAKwC,cADrB;AAEA,MAAA,aAAa,EAAE,KAAKH,aAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAMA,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAE5C,GAAtB;AAA2B,MAAA,QAAQ,EAAED,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADD,GAWCE,KAAK,KAAK,QAAV,gBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKmB,QAAvB;AAAiC,MAAA,aAAa,EAAE,KAAKgD,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKhD,QAAzB;AAAmC,MAAA,aAAa,EAAE,KAAKgD,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADJ;AAwBD;;AAjGiB;;AAoG5B,eAAe1D,GAAf","sourcesContent":["import React,{ Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation'; \nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo'; \nimport Rank from './components/Rank/Rank'; \nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'SignIn',\n  isSignedIn:false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n}\n}\n\nconst app = new Clarifai.App({\n apiKey: '2ecce0c053ef463f8f6c8e53549b9059'\n});\nconst particleOptions={\n                        particles: {\n                          number: {\n                            value: 100,\n                            density: {\n                              enable:true,\n                              value_area:900\n                            }\n                          }\n                        }\n                      }\nclass App extends Component {\n        constructor(){\n          super();\n          this.state = initialState;\n        }\n\n        LoadUser = (data) => {\n          this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined\n        }})\n        }\n\n        calculateFaceLocation = (data) => {\n          const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n          const image = document.getElementById('inputimage');\n          const width = Number(image.width);\n          const height = Number(image.height);\n          // console.log(width, height);\n          return {\n            leftCol: clarifaiFace.left_col * width,\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - (clarifaiFace.right_col * width),\n            bottomRow: height - (clarifaiFace.bottom_row * height)\n          }\n        }\n\n      displayFaceBox = (box) => {\n        // console.log(box);\n        this.setState({box: box});\n      }\n        onInputChange = (event) => {\n          this.setState({input: event.target.value});\n        }\n        onButtonSubmit = () => {\n          this.setState({imageUrl: this.state.input});\n          app.models.predict(\n            Clarifai.FACE_DETECT_MODEL, \n            this.state.input)\n          .then(response => {\n            if(response){\n              fetch('https://vast-forest-77348.herokuapp.com/image',{\n                    method: 'put',\n                    headers: {'Content-Type':'application/json'},\n                    body: JSON.stringify({\n                    id:this.state.user.id\n              })}\n              )\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, {entries: count})\n                )\n              })\n              .catch(console.log)\n            }\n            this.displayFaceBox(this.calculateFaceLocation(response))\n            })\n          .catch(err => console.log(err));\n        }\n\n        onRouteChange = (route) => {\n          if(route === 'signout'){\n            this.setState(initialState)\n          } else if(route === 'home'){\n            this.setState({isSignedIn: true})\n          }\n          this.setState({route: route});\n        }\n        render(){\n          const { isSignedIn, imageUrl, route, box } = this.state;\n            return (\n                <div className=\"App\">\n                <Particles className='particles' \n                        params={particleOptions}\n                        />\n                <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n                {route === 'home'\n                ? <div>\n                  <Logo />\n                  <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                  <ImageLinkForm \n                  onButtonSubmit={this.onButtonSubmit}\n                  onInputChange={this.onInputChange}/>\n                  <FaceRecognition box={box} imageUrl={imageUrl}/>\n                  </div>\n                \n                : (\n                  route === 'SignIn'\n                  ? <SignIn LoadUser={this.LoadUser} onRouteChange={this.onRouteChange}/>\n                  : <Register LoadUser={this.LoadUser} onRouteChange={this.onRouteChange}/>\n                )\n                }          \n                </div>\n            );\n          }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}